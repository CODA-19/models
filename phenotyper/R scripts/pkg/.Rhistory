# Function to load or install
install_or_load_pack <- function(pack){
new.pkg <- pack[!(pack %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pack, require, character.only = TRUE)
}
# Packages used
pack <- c("tidyverse", "bigrquery","plotly","scales","RColorBrewer","data.table","knitr","corrplot","Hmisc","stats", "janitor", "lubridate", "testthat", "magrittr",
"rjson", "DBI", "comorbidity", "RSQLite", "fuzzyjoin",
"purrr", "healthcareai")
# Loading the pack
install_or_load_pack(pack)
files_path <- list.files(path = "./data/raw/", full.names=TRUE)
files_names <- as_tibble(str_split_fixed(list.files(path = "./data/raw/"), pattern =".csv", n=2))[[1]]
for (i in seq_along(files_path)){
print(paste0('Currently reading ...', files_names[i]))
#dbGetQuery(coda19, statement = read_file(files_path[i]))
tmp <- read.csv(files_path[i])
if ("X"%in%colnames(tmp)){
tmp <- tmp%>%select(-X)
}
assign(files_names[i], tmp)
}
files_path <- list.files(path = "./data/raw/", full.names=TRUE)
getwd()
source("./pkg/library_load.R")
# # ### Reading the CSV script
files_path <- list.files(path = "./data/raw/", full.names=TRUE)
files_names <- as_tibble(str_split_fixed(list.files(path = "./data/raw/"), pattern =".csv", n=2))[[1]]
for (i in seq_along(files_path)){
print(paste0('Currently reading ...', files_names[i]))
#dbGetQuery(coda19, statement = read_file(files_path[i]))
tmp <- read_csv(files_path[i])
if ("X1"%in%colnames(tmp)){
tmp <- tmp%>%select(-X1)
}
assign(files_names[i], tmp)
}
